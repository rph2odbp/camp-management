{"version":3,"file":"PaypalButtons.js","sources":["../../../../../src/components/PayPal/components/PaypalButtons.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport classnames from 'classnames';\nimport { getStyle } from '../utils/get-paypal-styles';\nimport Spinner from '../../internal/Spinner';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\n\nimport type { PayPalButtonsProps } from './types';\nimport type { FundingSource } from '../types';\n\nexport default function PaypalButtons({\n    onInit,\n    onApprove,\n    onClick,\n    onCancel,\n    onError,\n    onShippingAddressChange,\n    onShippingOptionsChange,\n    onSubmit,\n    isProcessingPayment,\n    paypalRef,\n    style,\n    ...props\n}: PayPalButtonsProps) {\n    const { i18n } = useCoreContext();\n    const isTokenize = props.configuration?.intent === 'tokenize';\n    const paypalButtonRef = useRef<HTMLDivElement>(null);\n    const creditButtonRef = useRef<HTMLDivElement>(null);\n    const payLaterButtonRef = useRef<HTMLDivElement>(null);\n    const venmoButtonRef = useRef<HTMLDivElement>(null);\n\n    const createButton = (fundingSource: FundingSource, buttonRef) => {\n        const configuration = {\n            ...(isTokenize && { createBillingAgreement: onSubmit }),\n            ...(!isTokenize && { createOrder: onSubmit }),\n            ...(!isTokenize && fundingSource !== 'venmo' && onShippingAddressChange && { onShippingAddressChange }),\n            ...(!isTokenize && fundingSource !== 'venmo' && onShippingOptionsChange && { onShippingOptionsChange }),\n            fundingSource,\n            style: getStyle(fundingSource, style),\n            onInit,\n            onClick,\n            onCancel,\n            onError,\n            onApprove\n        };\n\n        const button = paypalRef.Buttons(configuration);\n\n        if (button.isEligible()) {\n            button.render(buttonRef.current);\n        }\n    };\n\n    useEffect(() => {\n        const { PAYPAL, CREDIT, PAYLATER, VENMO } = paypalRef.FUNDING;\n        createButton(PAYPAL, paypalButtonRef);\n\n        if (!props.blockPayPalCreditButton) createButton(CREDIT, creditButtonRef);\n        if (!props.blockPayPalPayLaterButton) createButton(PAYLATER, payLaterButtonRef);\n        if (!props.blockPayPalVenmoButton) createButton(VENMO, venmoButtonRef);\n    }, []);\n\n    const isProcessingPaymentWithoutReviewPage = props.commit === true;\n\n    return (\n        <div className={classnames('adyen-checkout__paypal__buttons', { 'adyen-checkout__paypal-processing': isProcessingPayment })}>\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--paypal\" ref={paypalButtonRef} />\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--credit\" ref={creditButtonRef} />\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--pay-later\" ref={payLaterButtonRef} />\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--venmo\" ref={venmoButtonRef} />\n\n            {isProcessingPayment && (\n                <div className=\"adyen-checkout__paypal\">\n                    <div className=\"adyen-checkout__paypal__status adyen-checkout__paypal__status--processing\">\n                        <Spinner size=\"medium\" inline />\n                        {isProcessingPaymentWithoutReviewPage && i18n.get('paypal.processingPayment')}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n"],"names":["PaypalButtons","_param","props","onInit","onApprove","onClick","onCancel","onError","onShippingAddressChange","onShippingOptionsChange","onSubmit","isProcessingPayment","paypalRef","style","i18n","useCoreContext","isTokenize","configuration","intent","paypalButtonRef","useRef","creditButtonRef","payLaterButtonRef","venmoButtonRef","createButton","fundingSource","buttonRef","_object_spread_props","createBillingAgreement","createOrder","getStyle","button","Buttons","isEligible","render","current","useEffect","PAYPAL","CREDIT","PAYLATER","VENMO","FUNDING","blockPayPalCreditButton","blockPayPalPayLaterButton","blockPayPalVenmoButton","isProcessingPaymentWithoutReviewPage","commit","h","div","className","classnames","ref","Spinner","size","inline","get"],"mappings":"itCAUe,SAASA,EAAcC,OAefC,GAfeC,OAClCA,EAAMC,UACNA,EAASC,QACTA,EAAOC,SACPA,EAAQC,QACRA,EAAOC,wBACPA,EAAuBC,wBACvBA,EAAuBC,SACvBA,EAAQC,oBACRA,EAAmBC,UACnBA,EAASC,MACTA,GAXkCZ,EAY/BC,EAAAA,EAZ+BD,EAAA,CAClCE,SACAC,YACAC,UACAC,WACAC,UACAC,0BACAC,0BACAC,WACAC,sBACAC,YACAC,UAGA,MAAMC,KAAEA,GAASC,IACXC,EAA6C,cAAb,QAAnBd,EAAAA,EAAMe,qBAANf,IAAAA,OAAAA,EAAAA,EAAqBgB,QAClCC,EAAkBC,EAAuB,MACzCC,EAAkBD,EAAuB,MACzCE,EAAoBF,EAAuB,MAC3CG,EAAiBH,EAAuB,MAExCI,EAAe,CAACC,EAA8BC,KAChD,MAAMT,EAAgBU,wUACdX,GAAc,CAAEY,uBAAwBlB,IACvCM,GAAc,CAAEa,YAAanB,IAC7BM,GAAgC,UAAlBS,GAA6BjB,GAA2B,CAAEA,4BACxEQ,GAAgC,UAAlBS,GAA6BhB,GAA2B,CAAEA,4BAAwB,CACrGgB,gBACAZ,MAAOiB,EAASL,EAAeZ,GAC/BV,SACAE,UACAC,WACAC,UACAH,cAGE2B,EAASnB,EAAUoB,QAAQf,GAE7Bc,EAAOE,cACPF,EAAOG,OAAOR,EAAUS,UAIhCC,EAAU,KACN,MAAMC,OAAEA,EAAMC,OAAEA,EAAMC,SAAEA,EAAQC,MAAEA,GAAU5B,EAAU6B,QACtDjB,EAAaa,EAAQlB,GAEhBjB,EAAMwC,yBAAyBlB,EAAac,EAAQjB,GACpDnB,EAAMyC,2BAA2BnB,EAAae,EAAUjB,GACxDpB,EAAM0C,wBAAwBpB,EAAagB,EAAOjB,IACxD,IAEH,MAAMsB,GAAwD,IAAjB3C,EAAM4C,OAEnD,OACIC,EAACC,MAAAA,CAAIC,UAAWC,EAAW,kCAAmC,CAAE,oCAAqCvC,KACjGoC,EAACC,MAAAA,CAAIC,UAAU,wEAAwEE,IAAKhC,IAC5F4B,EAACC,MAAAA,CAAIC,UAAU,wEAAwEE,IAAK9B,IAC5F0B,EAACC,MAAAA,CAAIC,UAAU,2EAA2EE,IAAK7B,IAC/FyB,EAACC,MAAAA,CAAIC,UAAU,uEAAuEE,IAAK5B,IAE1FZ,GACGoC,EAACC,MAAAA,CAAIC,UAAU,0BACXF,EAACC,MAAAA,CAAIC,UAAU,6EACXF,EAACK,EAAAA,CAAQC,KAAK,SAASC,QAAAA,IACtBT,GAAwC/B,EAAKyC,IAAI,8BAM1E"}