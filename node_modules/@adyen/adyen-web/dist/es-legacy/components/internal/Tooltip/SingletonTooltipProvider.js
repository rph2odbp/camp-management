import{createContext as e,createElement as t}from"../../../external/preact/dist/preact.js";import{useState as r,useRef as o,useEffect as n,useMemo as i,useContext as s}from"../../../external/preact/hooks/dist/hooks.js";import{Tooltip as c}from"./Tooltip.js";import{TooltipController as l}from"./TooltipController.js";function u(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const a=e(null),p=({children:e})=>{const[s,p]=r(null),f=o(l.tooltipId),m=o(!1),[,d]=r(0);n(()=>{const e=()=>{l.canRegisterTooltipHandler()?(l.registerTooltipHandler(p),m.current=!0,d(e=>e+1)):(m.current=!1,d(e=>e+1))};e();const t=l.onPrimaryReset(()=>{e()});return()=>{t(),m.current&&l.reset()}},[]);const b=i(()=>({showTooltip:e=>l.showTooltip(e),hideTooltip:e=>l.hideTooltip(e),id:f.current}),[]);return t(a.Provider,{value:b},e,m.current&&t(c,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){u(e,t,r[t])})}return e}({id:f.current},s)))},f=()=>{const e=s(a);if(!e)throw new Error("useTooltip must be used within a TooltipProvider");return e};export{p as SingletonTooltipProvider,f as useTooltip};
//# sourceMappingURL=SingletonTooltipProvider.js.map
