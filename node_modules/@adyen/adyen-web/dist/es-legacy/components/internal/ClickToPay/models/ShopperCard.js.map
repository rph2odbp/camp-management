{"version":3,"file":"ShopperCard.js","sources":["../../../../../../src/components/internal/ClickToPay/models/ShopperCard.ts"],"sourcesContent":["import { DigitalCardStatus, SrcCard } from '../services/sdks/types';\nimport { SchemeNames } from '../services/sdks/utils';\nimport { ClickToPayScheme } from '../types';\n\nclass ShopperCard {\n    public dateOfCardLastUsed?: string;\n    public dateOfCardCreated: string;\n    public panLastFour: string;\n    public srcDigitalCardId: string;\n    public scheme: ClickToPayScheme;\n    public artUri: string;\n    public srcCorrelationId: string;\n    public tokenId?: string;\n    public isExpired: boolean;\n\n    private readonly panExpirationMonth: string;\n    private readonly panExpirationYear: string;\n    private readonly descriptorName?: string;\n    private readonly status?: DigitalCardStatus = null;\n\n    constructor(maskedCard: SrcCard, scheme: ClickToPayScheme, srcCorrelationId: string) {\n        this.dateOfCardLastUsed = maskedCard.dateOfCardLastUsed;\n        this.dateOfCardCreated = maskedCard.dateOfCardCreated;\n        this.panLastFour = maskedCard.panLastFour;\n        this.srcDigitalCardId = maskedCard.srcDigitalCardId;\n        this.descriptorName = maskedCard.digitalCardData.descriptorName;\n        this.tokenId = maskedCard.tokenId;\n        this.scheme = scheme;\n        this.artUri = maskedCard.digitalCardData.artUri;\n        this.srcCorrelationId = srcCorrelationId;\n        this.panExpirationMonth = maskedCard.panExpirationMonth;\n        this.panExpirationYear = maskedCard.panExpirationYear;\n        this.status = maskedCard.digitalCardData.status;\n\n        this.isExpired = this.confirmCardIsExpired();\n    }\n\n    get title() {\n        return this.scheme === 'visa' ? SchemeNames[this.scheme] : this.descriptorName || SchemeNames[this.scheme];\n    }\n\n    get isDcfPopupEmbedded(): boolean {\n        return this.scheme === 'mc';\n    }\n\n    private confirmCardIsExpired(): boolean {\n        if (!['ACTIVE', 'PENDING'].includes(this.status)) return true;\n\n        if (!this.panExpirationYear && !this.panExpirationMonth) return false;\n\n        const [currentMonth, currentYear] = [new Date().getMonth() + 1, new Date().getFullYear()];\n        if (Number(this.panExpirationYear) > currentYear) return false;\n        if (Number(this.panExpirationYear) === currentYear && Number(this.panExpirationMonth) >= currentMonth) return false;\n\n        return true;\n    }\n}\n\nexport default ShopperCard;\n"],"names":["ShopperCard","title","this","scheme","SchemeNames","descriptorName","isDcfPopupEmbedded","confirmCardIsExpired","includes","status","panExpirationYear","panExpirationMonth","currentMonth","currentYear","Date","getMonth","getFullYear","Number","constructor","maskedCard","srcCorrelationId","_define_property","dateOfCardLastUsed","dateOfCardCreated","panLastFour","srcDigitalCardId","artUri","tokenId","isExpired","digitalCardData"],"mappings":"gLAIA,MAAMA,EAiCF,SAAIC,GACA,MAAuB,SAAhBC,KAAKC,OAAoBC,EAAYF,KAAKC,QAAUD,KAAKG,gBAAkBD,EAAYF,KAAKC,OACvG,CAEA,sBAAIG,GACA,MAAuB,OAAhBJ,KAAKC,MAChB,CAEQI,oBAAAA,GACJ,IAAK,CAAC,SAAU,WAAWC,SAASN,KAAKO,QAAS,OAAO,EAEzD,IAAKP,KAAKQ,oBAAsBR,KAAKS,mBAAoB,OAAO,EAEhE,MAAOC,EAAcC,GAAe,EAAC,IAAIC,MAAOC,WAAa,GAAG,IAAID,MAAOE,eAC3E,QAAIC,OAAOf,KAAKQ,mBAAqBG,MACjCI,OAAOf,KAAKQ,qBAAuBG,GAAeI,OAAOf,KAAKS,qBAAuBC,EAG7F,CAnCA,WAAAM,CAAYC,EAAqBhB,EAA0BiB,GAf3DC,EAAAnB,KAAOoB,0BAAP,GACAD,EAAAnB,KAAOqB,yBAAP,GACAF,EAAAnB,KAAOsB,mBAAP,GACAH,EAAAnB,KAAOuB,wBAAP,GACAJ,EAAAnB,KAAOC,cAAP,GACAkB,EAAAnB,KAAOwB,cAAP,GACAL,EAAAnB,KAAOkB,wBAAP,GACAC,EAAAnB,KAAOyB,eAAP,GACAN,EAAAnB,KAAO0B,iBAAP,GAEAP,EAAAnB,KAAiBS,0BAAjB,GACAU,EAAAnB,KAAiBQ,yBAAjB,GACAW,EAAAnB,KAAiBG,sBAAjB,GACAgB,EAAAnB,KAAiBO,SAA6B,MAG1CP,KAAKoB,mBAAqBH,EAAWG,mBACrCpB,KAAKqB,kBAAoBJ,EAAWI,kBACpCrB,KAAKsB,YAAcL,EAAWK,YAC9BtB,KAAKuB,iBAAmBN,EAAWM,iBACnCvB,KAAKG,eAAiBc,EAAWU,gBAAgBxB,eACjDH,KAAKyB,QAAUR,EAAWQ,QAC1BzB,KAAKC,OAASA,EACdD,KAAKwB,OAASP,EAAWU,gBAAgBH,OACzCxB,KAAKkB,iBAAmBA,EACxBlB,KAAKS,mBAAqBQ,EAAWR,mBACrCT,KAAKQ,kBAAoBS,EAAWT,kBACpCR,KAAKO,OAASU,EAAWU,gBAAgBpB,OAEzCP,KAAK0B,UAAY1B,KAAKK,sBAC1B"}