{"version":3,"file":"UPI.js","sources":["../../../../src/components/UPI/UPI.tsx"],"sourcesContent":["import { h, RefObject } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport UPIComponent from './components/UPIComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport Await from '../internal/Await';\nimport QRLoader from '../internal/QRLoader';\nimport { UPIConfiguration, UpiMode, UpiPaymentData, UpiType } from './types';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport { TxVariants } from '../tx-variants';\nimport isMobile from '../../utils/isMobile';\nimport type { ICore } from '../../core/types';\nimport { getIntentOption, getQrOption, getVpaOption } from './constants';\n\n/**\n * For mobile:\n * We should show upi_collect and upi_intent depending on if `apps` are returned in /paymentMethods response.\n * If there is no apps, hide segmented controls.\n * The upi_collect should always be on the second tab.\n * Never show QR code.\n *\n * For non-mobile:\n * We should never show the upi_intent (ignore `apps` in /paymentMethods response)\n * The upi_qr should be on the first tab and the upi_collect should be on second tab\n */\n\nclass UPI extends UIElement<UPIConfiguration> {\n    public static type = TxVariants.upi;\n    public static txVariants = [TxVariants.upi, TxVariants.upi_qr, TxVariants.upi_collect, TxVariants.upi_intent];\n\n    private selectedMode: UpiMode;\n\n    constructor(checkout: ICore, props: UPIConfiguration) {\n        super(checkout, props);\n        this.selectedMode = this.props.defaultMode;\n    }\n\n    formatProps(props: UPIConfiguration): UPIConfiguration {\n        if (!isMobile()) {\n            return {\n                ...super.formatProps(props),\n                defaultMode: ['qrCode', 'vpa'].includes(props?.defaultMode) ? props.defaultMode : 'qrCode',\n                apps: [], // For desktop, ignore the apps\n                segmentedControlOptions: [getQrOption(props.i18n), getVpaOption(props.i18n)]\n            };\n        }\n\n        const { i18n, apps = [] } = props;\n        const hasIntentApps = apps.length > 0;\n        if (hasIntentApps) {\n            // Mobile with UPI apps\n            const allowedModes: UpiMode[] = ['intent', 'vpa'];\n            const defaultMode = allowedModes.includes(props.defaultMode) ? props.defaultMode : 'intent';\n            return {\n                ...super.formatProps(props),\n                defaultMode,\n                apps,\n                segmentedControlOptions: [getIntentOption(i18n), getVpaOption(i18n)]\n            };\n        }\n\n        // Mobile, but no UPI apps\n        return {\n            ...super.formatProps(props),\n            defaultMode: 'vpa', // Only VPA is possible\n            apps: [],\n            segmentedControlOptions: []\n        };\n    }\n\n    public get isValid(): boolean {\n        return this.state.isValid;\n    }\n\n    public formatData(): UpiPaymentData {\n        const { virtualPaymentAddress, app } = this.state.data || {};\n\n        return {\n            paymentMethod: {\n                type: this.paymentType,\n                ...(this.paymentType === TxVariants.upi_collect && virtualPaymentAddress && { virtualPaymentAddress }),\n                ...(this.paymentType === TxVariants.upi_intent && app?.id && { appId: app.id })\n            }\n        };\n    }\n\n    get paymentType(): UpiType {\n        if (this.selectedMode === 'qrCode') {\n            return TxVariants.upi_qr;\n        }\n        if (this.selectedMode === 'vpa') {\n            return TxVariants.upi_collect;\n        }\n        return TxVariants.upi_intent;\n    }\n\n    private onUpdateMode = (mode: UpiMode): void => {\n        this.selectedMode = mode;\n    };\n\n    private renderContent(type: string, url: string, paymentMethodType: string): h.JSX.Element {\n        switch (type) {\n            case 'qrCode':\n                return (\n                    <QRLoader\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        qrCodeData={this.props.qrCodeData ? encodeURIComponent(this.props.qrCodeData) : null}\n                        type={TxVariants.upi_qr}\n                        brandLogo={this.props.brandLogo || this.icon}\n                        onComplete={this.onComplete}\n                        introduction={this.props.i18n.get('upi.qrCodeWaitingMessage')}\n                        countdownTime={5}\n                        onActionHandled={this.onActionHandled}\n                    />\n                );\n            case 'await':\n                return (\n                    <Await\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        url={url}\n                        type={paymentMethodType}\n                        showCountdownTimer\n                        shouldRedirectAutomatically\n                        showAmount\n                        countdownTime={5}\n                        clientKey={this.props.clientKey}\n                        paymentData={this.props.paymentData}\n                        onActionHandled={this.onActionHandled}\n                        onError={this.props.onError}\n                        messageText={this.props.i18n.get('upi.vpaWaitingMessage')}\n                        awaitText={this.props.i18n.get('await.waitForConfirmation')}\n                        onComplete={this.onComplete}\n                        brandLogo={this.icon}\n                        amount={this.props.amount}\n                    />\n                );\n            default:\n                return (\n                    <UPIComponent\n                        ref={(ref: RefObject<typeof UPIComponent>) => {\n                            this.componentRef = ref;\n                        }}\n                        payButton={this.payButton}\n                        onChange={this.setState}\n                        onUpdateMode={this.onUpdateMode}\n                        apps={this.props.apps}\n                        segmentedControlOptions={this.props.segmentedControlOptions}\n                        defaultMode={this.props.defaultMode}\n                        showPayButton={this.props.showPayButton}\n                    />\n                );\n        }\n    }\n\n    public render(): h.JSX.Element {\n        const { type, url, paymentMethodType } = this.props;\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>{this.renderContent(type, url, paymentMethodType)}</SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default UPI;\n"],"names":["UPI","UIElement","formatProps","props","isMobile","_object_spread_props","_object_spread","super","defaultMode","includes","apps","segmentedControlOptions","getQrOption","i18n","getVpaOption","length","getIntentOption","isValid","this","state","formatData","virtualPaymentAddress","app","data","paymentMethod","type","paymentType","TxVariants","upi_collect","upi_intent","id","appId","selectedMode","upi_qr","renderContent","url","paymentMethodType","h","QRLoader","ref","componentRef","qrCodeData","encodeURIComponent","brandLogo","icon","onComplete","introduction","get","countdownTime","onActionHandled","Await","showCountdownTimer","shouldRedirectAutomatically","showAmount","clientKey","paymentData","onError","messageText","awaitText","amount","UPIComponent","payButton","onChange","setState","onUpdateMode","showPayButton","render","CoreProvider","loadingContext","resources","SRPanelProvider","srPanel","modules","constructor","checkout","_define_property","mode","upi","txVariants"],"mappings":"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"}