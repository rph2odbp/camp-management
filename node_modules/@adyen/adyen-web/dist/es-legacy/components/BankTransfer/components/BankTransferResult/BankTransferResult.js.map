{"version":3,"file":"BankTransferResult.js","sources":["../../../../../../src/components/BankTransfer/components/BankTransferResult/BankTransferResult.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport useImage from '../../../../core/Context/useImage';\nimport DetailsTable from '../../../internal/DetailsTable';\nimport { BankTransferResultInstructions } from './BankTransferResultInstructions';\nimport BankTransferVoucher from './BankTransferVoucher';\nimport type { ActionHandledReturnObject } from '../../../../types/global-types';\n\nexport interface BankTransferResultProps {\n    paymentMethodType?: string;\n    reference?: string;\n    totalAmount?: { value: number; currency: string };\n    beneficiary?: string;\n    iban?: string;\n    bic?: string;\n    accountNumber?: string;\n    sortCode?: string;\n    routingNumber?: string;\n    onActionHandled?: (actionHandledObj: ActionHandledReturnObject) => void;\n}\n\nexport default function BankTransferResult(props: BankTransferResultProps) {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    return (\n        <BankTransferVoucher\n            paymentMethodType={props.paymentMethodType}\n            imageUrl={getImage()(props.paymentMethodType)}\n            onActionHandled={props.onActionHandled}\n            amount={i18n.amount(props.totalAmount.value, props.totalAmount.currency)}\n            instructions={<BankTransferResultInstructions />}\n            voucherDetails={\n                <DetailsTable\n                    shouldShowCopyButton\n                    tableFields={[\n                        { label: i18n.get('bankTransfer.beneficiary'), value: props.beneficiary },\n                        { label: i18n.get('bankTransfer.accountNumber'), value: props.accountNumber },\n                        { label: i18n.get('bankTransfer.sortCode'), value: props.sortCode },\n                        { label: i18n.get('bankTransfer.routingNumber'), value: props.routingNumber },\n                        { label: i18n.get('bankTransfer.iban'), value: props.iban },\n                        { label: i18n.get('bankTransfer.bic'), value: props.bic },\n                        { label: i18n.get('bankTransfer.reference'), value: props.reference }\n                    ]}\n                />\n            }\n        />\n    );\n}\n"],"names":["BankTransferResult","props","i18n","useCoreContext","getImage","useImage","h","BankTransferVoucher","paymentMethodType","imageUrl","onActionHandled","amount","totalAmount","value","currency","instructions","BankTransferResultInstructions","voucherDetails","DetailsTable","shouldShowCopyButton","tableFields","label","get","beneficiary","accountNumber","sortCode","routingNumber","iban","bic","reference"],"mappings":"oYAqBe,SAASA,EAAmBC,GACvC,MAAMC,KAAEA,GAASC,IACXC,EAAWC,IAEjB,OACIC,EAACC,EAAAA,CACGC,kBAAmBP,EAAMO,kBACzBC,SAAUL,IAAWH,EAAMO,mBAC3BE,gBAAiBT,EAAMS,gBACvBC,OAAQT,EAAKS,OAAOV,EAAMW,YAAYC,MAAOZ,EAAMW,YAAYE,UAC/DC,aAAcT,EAACU,EAAAA,MACfC,eACIX,EAACY,EAAAA,CACGC,sBAAAA,EACAC,YAAa,CACT,CAAEC,MAAOnB,EAAKoB,IAAI,4BAA6BT,MAAOZ,EAAMsB,aAC5D,CAAEF,MAAOnB,EAAKoB,IAAI,8BAA+BT,MAAOZ,EAAMuB,eAC9D,CAAEH,MAAOnB,EAAKoB,IAAI,yBAA0BT,MAAOZ,EAAMwB,UACzD,CAAEJ,MAAOnB,EAAKoB,IAAI,8BAA+BT,MAAOZ,EAAMyB,eAC9D,CAAEL,MAAOnB,EAAKoB,IAAI,qBAAsBT,MAAOZ,EAAM0B,MACrD,CAAEN,MAAOnB,EAAKoB,IAAI,oBAAqBT,MAAOZ,EAAM2B,KACpD,CAAEP,MAAOnB,EAAKoB,IAAI,0BAA2BT,MAAOZ,EAAM4B,eAMlF"}