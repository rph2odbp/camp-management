import{useState as s,useEffect as e}from"../../../external/preact/hooks/dist/hooks.js";import r from"../../../core/Errors/useSRPanelContext.js";import{usePrevious as o}from"../../../utils/hookUtils.js";import{ERROR_ACTION_BLUR_SCENARIO as t,ERROR_ACTION_FOCUS_FIELD as a}from"../../../core/Errors/constants.js";import{getArrayDifferences as c}from"../../../utils/arrayUtils.js";const i=({errors:i,isValidating:n,sfp:l})=>{const[u,m]=s(null),p=o(u),{setSRMessagesFromObjects:d,setSRMessagesFromStrings:f,clearSRPanel:y,shouldMoveFocusSR:S}=r(),g=["encryptedCardNumber","encryptedExpiryDate","encryptedSecurityCode"];e(()=>{try{const s=d?.({}),e=s?.({errors:i,isValidating:n,layout:g}),r=e?.currentErrorsSortedByLayout;switch(m(r),e?.action){case a:S&&l?.setFocusOn(e?.fieldToFocus),setTimeout(()=>{"boolean"==typeof n&&(n=!1)},300);break;case t:{const s=c(r,p,"field"),e=s?.[0];if(e){const s=!0?e.errorMessage:null;f(s)}else y();break}}}catch(s){}},[i])};export{i as useSRPanelForGiftcardErrors};
//# sourceMappingURL=useSRPanelForGiftcardErrors.js.map
