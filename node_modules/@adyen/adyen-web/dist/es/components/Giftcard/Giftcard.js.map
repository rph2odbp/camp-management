{"version":3,"file":"Giftcard.js","sources":["../../../../src/components/Giftcard/Giftcard.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport GiftcardComponent from './components/GiftcardComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport PayButton from '../internal/PayButton';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { PaymentAmount } from '../../types/global-types';\nimport { GiftCardElementData, GiftCardConfiguration, balanceCheckResponseType } from './types';\nimport { TxVariants } from '../tx-variants';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\n\nexport class GiftcardElement extends UIElement<GiftCardConfiguration> {\n    public static type = TxVariants.giftcard;\n\n    protected static defaultProps = {\n        brandsConfiguration: {}\n    };\n\n    formatProps(props) {\n        return {\n            ...props?.configuration,\n            ...props\n        };\n    }\n\n    formatData(): GiftCardElementData {\n        return {\n            paymentMethod: {\n                type: this.constructor['type'],\n                brand: this.props.brand,\n                encryptedCardNumber: this.state.data?.encryptedCardNumber,\n                encryptedSecurityCode: this.state.data?.encryptedSecurityCode\n            }\n        };\n    }\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    get icon() {\n        return this.props.brandsConfiguration[this.props.brand]?.icon || this.props.icon || this.resources.getImage()(this.props.brand);\n    }\n\n    get displayName() {\n        return this.props.brandsConfiguration[this.props.brand]?.name || this.props.name;\n    }\n\n    private handleBalanceCheck = (data: GiftCardElementData): Promise<balanceCheckResponseType> => {\n        if (this.props.onBalanceCheck) {\n            return new Promise((resolve, reject) => {\n                void this.props.onBalanceCheck(resolve, reject, data);\n            });\n        }\n\n        if (this.props.session) {\n            return this.props.session.checkBalance(data);\n        }\n    };\n\n    private onOrderRequest = data => {\n        if (this.props.onOrderRequest)\n            return new Promise((resolve, reject) => {\n                void this.props.onOrderRequest(resolve, reject, data);\n            });\n        if (this.props.session) {\n            return this.props.session.createOrder();\n        }\n    };\n\n    public balanceCheck() {\n        return this.onBalanceCheck();\n    }\n\n    private onBalanceCheck = (): void => {\n        if (!this.isValid) {\n            this.showValidation();\n            return;\n        }\n\n        // skip balance check if no onBalanceCheck event has been defined\n        const hasBalanceCheck = this.props.session || this.props.onBalanceCheck;\n        if (!hasBalanceCheck) return super.submit();\n\n        this.setStatus('loading');\n\n        this.handleBalanceCheck(this.formatData())\n            .then(({ balance, transactionLimit = {} as PaymentAmount }) => {\n                if (!balance) throw new Error('card-error'); // card doesn't exist\n                if (balance?.currency !== this.props.amount?.currency) throw new Error('currency-error');\n                if (balance?.value <= 0) throw new Error('no-balance');\n\n                if (this.props.amount.value > balance.value || this.props.amount.value > transactionLimit.value) {\n                    if (this.props.order) {\n                        return this.makeSubmitCall();\n                    }\n\n                    return this.onOrderRequest(this.data).then((order: { orderData: string; pspReference: string }) => {\n                        this.setState({ order: { orderData: order.orderData, pspReference: order.pspReference } });\n                        return this.makeSubmitCall();\n                    });\n                } else {\n                    return this.handleOnRequiringConfirmation(balance, transactionLimit);\n                }\n            })\n            .catch(error => {\n                this.setStatus(error?.message || 'error');\n                if (this.props.onError) {\n                    if (error instanceof AdyenCheckoutError) {\n                        this.handleError(error);\n                    } else {\n                        this.handleError(new AdyenCheckoutError('ERROR', error));\n                    }\n                }\n            });\n    };\n\n    /**\n     * Check if it should call onRequiringConfirmation\n     */\n    private handleOnRequiringConfirmation = (balance, transactionLimit): Promise<any> => {\n        this.componentRef.setBalance({ balance, transactionLimit });\n        this.setStatus('ready');\n\n        // 1. if we show pay button we don't need to ask for confirmation\n        if (this.props.showPayButton) {\n            return;\n        }\n        // 2. there's no callback, we throw error\n        if (!this.props.onRequiringConfirmation) {\n            throw new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'onRequiringConfirmation must be provided');\n        }\n        // 3. success case if in case of custom pay button\n        return (\n            new Promise<void>((resolve, reject) => {\n                void this.props.onRequiringConfirmation(resolve, reject);\n            })\n                //when this resolve passed to onRequiringConfirmation gets resolved make payments call\n                .then(() => this.makeSubmitCall())\n                //when it gets rejected handle cancellation\n                .catch(() => {})\n        );\n    };\n\n    public submit() {\n        // for simplicity of the merchant we always only expose .submit()\n        // however to make the actual payment call we call makeSubmitCall\n        this.balanceCheck();\n    }\n\n    // this makes the payment, as .submit is used by the merchant to trigger the payButton action\n    private makeSubmitCall() {\n        super.submit();\n    }\n\n    // Giftcards override the regular payButton flow\n    public payButton = props => {\n        return <PayButton {...props} />;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    <GiftcardComponent\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        handleKeyPress={this.handleKeyPress}\n                        showPayButton={this.props.showPayButton}\n                        onChange={this.setState}\n                        makeBalanceCheck={() => this.onBalanceCheck()}\n                        makePayment={() => this.makeSubmitCall()}\n                        payButton={this.payButton}\n                    />\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default GiftcardElement;\n"],"names":["GiftcardElement","UIElement","formatProps","props","configuration","formatData","paymentMethod","type","this","constructor","brand","encryptedCardNumber","state","data","encryptedSecurityCode","isValid","icon","brandsConfiguration","resources","getImage","displayName","name","balanceCheck","onBalanceCheck","submit","makeSubmitCall","super","render","h","CoreProvider","i18n","loadingContext","SRPanelProvider","srPanel","modules","GiftcardComponent","ref","componentRef","handleKeyPress","showPayButton","onChange","setState","makeBalanceCheck","makePayment","payButton","args","_define_property","handleBalanceCheck","Promise","resolve","reject","session","checkBalance","onOrderRequest","createOrder","showValidation","setStatus","then","balance","transactionLimit","Error","currency","amount","value","order","orderData","pspReference","handleOnRequiringConfirmation","catch","error","message","onError","AdyenCheckoutError","handleError","setBalance","onRequiringConfirmation","PayButton","TxVariants","giftcard","defaultProps"],"mappings":"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"}