{"version":3,"file":"SingletonTooltipProvider.js","sources":["../../../../../src/components/internal/Tooltip/SingletonTooltipProvider.tsx"],"sourcesContent":["import { createContext, h, ComponentChildren } from 'preact';\nimport { useState, useEffect, useContext, useRef, useMemo } from 'preact/hooks';\nimport { Tooltip } from './Tooltip';\nimport { TooltipProps } from './types';\nimport { TooltipController } from './TooltipController';\n\ntype TooltipContextValue = {\n    id: string;\n    showTooltip: (state?: TooltipProps) => void;\n    hideTooltip: () => void;\n};\n\nconst TooltipContext = createContext<TooltipContextValue | null>(null);\n\nconst SingletonTooltipProvider = ({ children }: { children?: ComponentChildren }) => {\n    const [tooltipProps, setTooltipProps] = useState<TooltipProps | null>(null);\n    const tooltipId = useRef(TooltipController.tooltipId);\n    /**\n     * We use `useRef` instead of `useState` to avoid triggering the `useEffect` again\n     * (which would happen if `isPrimary` were a state value in the `useEffect` dependency list).\n     * Because we need `TooltipController.onPrimaryReset` to add an event listener ONCE, we don't want\n     * to re-run `useEffect` and register it again on every state update.\n     *\n     * However, we do need a way to re-render, hence added `forceUpdate`.\n     */\n    const isPrimaryInstanceRef = useRef(false);\n    const [, forceUpdate] = useState(0);\n\n    useEffect(() => {\n        const tryRegister = () => {\n            if (TooltipController.canRegisterTooltipHandler()) {\n                TooltipController.registerTooltipHandler(setTooltipProps);\n                isPrimaryInstanceRef.current = true;\n                forceUpdate(r => r + 1);\n            } else {\n                isPrimaryInstanceRef.current = false;\n                forceUpdate(r => r + 1);\n            }\n        };\n\n        tryRegister();\n\n        const unsubscribe = TooltipController.onPrimaryReset(() => {\n            tryRegister();\n        });\n\n        return () => {\n            // When the primary instance is unmounted, the only tooltip component is gone.\n            // So we need to notify other instances, one of the instances should\n            // become the primary instance to mount the tooltip component again.\n            unsubscribe();\n            if (isPrimaryInstanceRef.current) {\n                TooltipController.reset();\n            }\n        };\n    }, []);\n\n    const contextValue = useMemo(\n        () => ({\n            showTooltip: (state?: TooltipProps) => TooltipController.showTooltip(state),\n            hideTooltip: (state?: TooltipProps) => TooltipController.hideTooltip(state),\n            id: tooltipId.current\n        }),\n        []\n    );\n\n    return (\n        <TooltipContext.Provider value={contextValue}>\n            {children}\n            {isPrimaryInstanceRef.current && <Tooltip id={tooltipId.current} {...tooltipProps} />}\n        </TooltipContext.Provider>\n    );\n};\n\nconst useTooltip = () => {\n    const ctx = useContext(TooltipContext);\n    if (!ctx) {\n        throw new Error('useTooltip must be used within a TooltipProvider');\n    }\n    return ctx;\n};\n\nexport { SingletonTooltipProvider, useTooltip };\n"],"names":["TooltipContext","createContext","SingletonTooltipProvider","children","tooltipProps","setTooltipProps","useState","tooltipId","useRef","TooltipController","isPrimaryInstanceRef","forceUpdate","useEffect","tryRegister","canRegisterTooltipHandler","registerTooltipHandler","current","r","unsubscribe","onPrimaryReset","reset","contextValue","useMemo","showTooltip","state","hideTooltip","id","h","Provider","value","Tooltip","useTooltip","ctx","useContext","Error"],"mappings":"6TAYA,MAAMA,EAAiBC,EAA0C,MAE3DC,EAA2B,EAAGC,eAChC,MAAOC,EAAcC,GAAmBC,EAA8B,MAChEC,EAAYC,EAAOC,EAAkBF,WASrCG,EAAuBF,GAAO,KAC3BG,GAAeL,EAAS,GAEjCM,EAAU,KACN,MAAMC,EAAc,KACZJ,EAAkBK,6BAClBL,EAAkBM,uBAAuBV,GACzCK,EAAqBM,SAAU,EAC/BL,EAAYM,GAAKA,EAAI,KAErBP,EAAqBM,SAAU,EAC/BL,EAAYM,GAAKA,EAAI,KAI7BJ,IAEA,MAAMK,EAAcT,EAAkBU,eAAe,KACjDN,MAGJ,MAAO,KAIHK,IACIR,EAAqBM,SACrBP,EAAkBW,UAG3B,IAEH,MAAMC,EAAeC,EACjB,KAAA,CACIC,YAAcC,GAAyBf,EAAkBc,YAAYC,GACrEC,YAAcD,GAAyBf,EAAkBgB,YAAYD,GACrEE,GAAInB,EAAUS,UAElB,IAGJ,OACIW,EAAC3B,EAAe4B,SAAQ,CAACC,MAAOR,GAC3BlB,EACAO,EAAqBM,SAAWW,EAACG,EAAAA,CAAQJ,GAAInB,EAAUS,WAAaZ,MAK3E2B,EAAa,KACf,MAAMC,EAAMC,EAAWjC,GACvB,IAAKgC,EACD,MAAM,IAAIE,MAAM,oDAEpB,OAAOF"}