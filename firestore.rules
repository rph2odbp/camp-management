rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // UPDATED: These functions now check the auth token directly, which is more secure and efficient.
    function isRole(role) {
      return request.auth != null && request.auth.token.role == role;
    }

    function isOneOfRoles(roles) {
      return request.auth != null && request.auth.token.role in roles;
    }

    function isAuthOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Any admin can read any user profile. A user can read their own profile.
      allow read: if isRole('admin') || isAuthOwner(userId);
      // Only admins can modify the users collection.
      allow list, create, update, delete: if isRole('admin');
    }

    // --- Campers Collection ---
    match /campers/{camperId} {
      allow get: if isOneOfRoles(['admin', 'staff']) || (isRole('parent') && resource.data.parentId == request.auth.uid);
      allow list: if isOneOfRoles(['admin', 'staff']) || (isRole('parent') && request.query.where.get('parentId', '') == request.auth.uid);
      allow create: if isOneOfRoles(['parent', 'admin']);
      allow update: if isRole('admin') || (isRole('parent') && resource.data.parentId == request.auth.uid);
      allow delete: if isRole('admin');
    }

    // --- Sessions Collection ---
    match /sessions/{sessionId} {
      allow get, list: if true; // Publicly readable
      allow write: if isRole('admin');
    }
    
    // --- Cabins Collection ---
    match /cabins/{cabinId} {
        allow read, list: if isOneOfRoles(['admin', 'staff']);
        allow write: if isOneOfRoles(['admin', 'staff']);
    }

    // --- Messages Collection ---
    match /messages/{messageId} {
      allow create: if request.auth.uid == request.resource.data.senderId;
      allow read, delete: if 
        request.auth.uid == resource.data.senderId || 
        isOneOfRoles(['admin', 'staff']) ||
        (isRole('parent') && exists(/databases/$(database)/documents/campers/$(resource.data.camperId)) &&
        get(/databases/$(database)/documents/campers/$(resource.data.camperId)).data.parentId == request.auth.uid);
    }
  }
}
