rules_version = '2';

service cloud.firestore {
  // IMPORTANT: This rule now targets your 'kateri-db' database
  match /databases/kateri-db/documents {

    // --- Helper Functions ---
    function getUserData(userId) {
      return get(/databases/kateri-db/documents/users/$(userId)).data;
    }
    function isAuthOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    function isRole(role) {
      return request.auth != null && getUserData(request.auth.uid).role == role;
    }
    function isOneOfRoles(roles) {
      return request.auth != null && getUserData(request.auth.uid).role in roles;
    }

    // --- Users Collection ---
    match /users/{userId} {
      allow read: if isAuthOwner(userId) || isRole('admin');
      allow list, create, update, delete: if isRole('admin');
    }

    // --- Publicly Readable Collections ---
    match /sessions/{sessionId} {
      allow read: if true;
      allow write: if isRole('admin');
    }
    match /registrationQuestions/{questionId} {
      allow read: if true;
      allow write: if isRole('admin');
    }

    // --- Campers Collection ---
    match /campers/{camperId} {
      allow read: if isOneOfRoles(['admin', 'staff']) || (isRole('parent') && resource.data.parentId == request.auth.uid);
      allow create: if isRole('parent') || isRole('admin');
      allow update: if isRole('admin') || (isRole('parent') && resource.data.parentId == request.auth.uid);
      allow delete: if isRole('admin');
    }
    match /campers/{document=**} {
      allow list: if request.auth != null;
    }
  }
}
